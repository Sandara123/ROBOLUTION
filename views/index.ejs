<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Robolution Blog</title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/responsive.css">
  <script src="/js/script.js" defer></script>
  <script src="/js/mobile.js" defer></script>
  <style>
    body, main {
      background-color: #ffffff;
      background-image: none;
    }
    
    <% if (locals.dashboard) { %>
    /* Dashboard specific styles */
    body {
      padding: 0;
      margin: 0;
    }
    
    .content-wrapper {
      padding-top: 0;
    }
    
    /* Hide elements when in dashboard */
    header, footer, .video-section, .back-to-top {
      display: none !important;
    }
    
    main {
      padding-top: 20px !important;
    }
    <% } %>
    
    /* Dropdown styles */
  .dropdown {
    position: relative;
    display: inline-block;
  }
  
  .dropdown-btn {
    cursor: pointer;
  }
  
  .dropdown-content {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    min-width: 220px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    border-radius: 4px;
    padding: 8px 0;
  }
  
  .dropdown-content a {
    color: black;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
    text-align: left;
    transition: background-color 0.2s ease;
  }
  
  .dropdown-content a:hover {
    background-color: #f1f1f1;
  }
  
  .dropdown:hover .dropdown-content {
    display: block;
  }
  
  /* Year section styling */
  .year-section {
    margin-bottom: 40px;
  }
  
  .collapsible {
    background-color: #00008b;
    padding: 15px 20px;
    border-radius: 6px;
    margin-bottom: 20px;
    font-size: 1.5rem;
    position: relative;
    cursor: pointer;
    transition: all 0.3s ease;
    color: white;
    display: flex;
    align-items: center;
    justify-content: space-between;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
    border: none;
    width: 100%;
    text-align: left;
  }
  
  .collapsible:hover {
    background-color: #146cb1;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
  }
  
  .collapsible:active {
    transform: translateY(1px);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }
  
  .collapsible::after {
    content: "▼";
    color: white;
    font-size: 14px;
    margin-left: 10px;
    transition: transform 0.3s ease;
  }
  
  .collapsible.active::after {
    transform: rotate(180deg);
  }
  
  .collapsible:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(10, 61, 98, 0.3), 0 3px 10px rgba(0, 0, 0, 0.1);
  }
  
  /* Mobile specific styles */
  @media (max-width: 768px) {
    .header-content {
      flex-direction: column;
      padding: 10px 5px;
    }
    
    .logo {
      max-width: 150px;
      margin-bottom: 10px;
    }
    
    .header-nav {
      flex-wrap: wrap;
      justify-content: center;
      gap: 5px;
    }
    
    .nav-button {
      padding: 6px 10px;
      font-size: 0.9rem;
      margin: 2px;
    }
    
    .video-section {
      height: auto;
      margin-top: 60px;
    }
    
    .NandU-banner {
      max-width: 90%;
    }
    
    .posts-header {
      flex-direction: column;
      align-items: flex-start;
      padding: 10px 15px;
    }
    
    .posts-header h2 {
      margin-bottom: 15px;
      font-size: 1.5rem;
    }

    .posts-controls {
      width: 100%;
      flex-direction: column;
      gap: 10px;
    }
    
    .search-form {
      width: 100%;
    }
    
    .search-form input {
      flex: 1;
      width: auto;
    }
    
    .sort-form {
      width: 100%;
      margin-bottom: 10px;
    }
    
    .sort-form label {
      display: block;
      margin-bottom: 5px;
    }
    
    .sort-form select {
      width: 100%;
      padding: 8px;
    }
    
    .year-section {
      margin-bottom: 25px;
    }
    
    .collapsible {
      padding: 12px 15px;
      font-size: 1.3rem;
    }
    
    .post-card {
      width: 100%;
    }
    
    .post-actions {
      flex-direction: column;
      gap: 8px;
    }
    
    .edit-btn, .delete-btn {
      width: 100%;
      text-align: center;
    }
    
    .footer-content {
      flex-direction: column;
      padding: 15px 10px;
      text-align: center;
    }
    
    .footer-left, .footer-right {
      width: 100%;
      text-align: center;
    }
    
    .footer-right {
      margin-top: 15px;
    }
    
    .footer-right p {
      font-size: 0.9rem;
      margin: 5px 0;
    }
    
    .social-icons {
      justify-content: center;
      margin-top: 10px;
    }
  }
  
  @media (max-width: 480px) {
    .nav-button {
      padding: 5px 8px;
      font-size: 0.8rem;
    }
    
    .collapsible {
      font-size: 1.1rem;
      padding: 10px 12px;
    }
    
    .posts-header h2 {
      font-size: 1.3rem;
    }
    
    .video-section {
      height: auto;
      margin-top: 55px;
    }
    
    .post-card h3 {
      font-size: 1.2rem;
    }
  }

  /* Search and sort controls */
  .posts-controls {
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
    align-items: center;
  }

  .search-form {
    display: flex;
    align-items: center;
  }

  .search-form input {
    padding: 8px 12px;
    border: 1px solid #ccc;
    border-radius: 4px 0 0 4px;
    font-size: 0.9rem;
    min-width: 200px;
  }

  .search-btn {
    background-color: #00008b;
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 0 4px 4px 0;
    cursor: pointer;
    font-size: 0.9rem;
    transition: background-color 0.3s ease;
  }

  .search-btn:hover {
    background-color: #146cb1;
  }
  </style>
  
</head>

<body>
<div class="content-wrapper">

  <% if (!locals.dashboard) { %>
  <header>
    <div class="header-content">
      <img src="/images/LOGO.webp" alt="Robolution Logo" class="logo">
      <!-- Mobile menu toggle will be added by JavaScript on small screens -->
      <nav class="header-nav">
        <a href="/create-post" class="nav-button create-post-button">Create Post</a>
        <a href="/index" class="nav-button">News</a>
        <a href="/categories" class="nav-button">Categories</a>
        <a href="/manage-categories" class="nav-button">Manage Categories</a>
        <a href="/manage-registrations" class="nav-button">Manage Registration</a>
        <a href="/manage-accounts" class="nav-button">Accounts</a>
        <a href="/admin/user-profiles" class="nav-button">User Profiles</a>
        <% if (user && user.role === 'superadmin') { %>
        <a href="/manage-backups" class="nav-button">Backups</a>
        <% } %>
        <div class="dropdown">
          <button class="nav-button dropdown-btn">Regional</button>
          <div class="dropdown-content">
            <a href="/admin-regional?region=All">All Regions</a>
            <% 
            // Try to get regions with posts
            let validRegions = [];
            
            // Extract regions from posts
            posts.forEach(post => {
              if (post.region && post.region !== 'All' && !validRegions.includes(post.region)) {
                validRegions.push(post.region);
              }
            });
            
            // Sort regions alphabetically
            validRegions.sort();
            
            // Display regions with posts
            if (validRegions.length > 0) {
              validRegions.forEach(function(region) { %>
                <a href="/admin-regional?region=<%= region %>"><%= region %></a>
              <% });
            } else { %>
              <div class="dropdown-empty">No regional posts available</div>
            <% } %>
          </div>
        </div>
        <a href="/logout" class="nav-button logout-button">Logout</a>
      </nav>
    </div>
  </header>

  <div class="video-section">
    <video src="/images/Robolution2025.mp4" loop muted autoplay playsinline></video>
  </div>
  <% } %>

  <main>

    <% if (!locals.dashboard) { %>
    <div class="NandU">
      <img src="/images/News and Updates.png" alt="News and Updates" class="NandU-banner">
    </div>
    <% } %>

    <div class="posts-header">
      <h2>Posts by Year</h2>
      <div class="posts-controls">
        <div class="search-form">
          <input type="text" id="searchInput" placeholder="Search by title" value="<%= typeof search !== 'undefined' ? search : '' %>">
        </div>
        <form method="GET" action="/index" class="sort-form">
          <label for="sort">Sort by:</label>
          <select name="sort" id="sort" onchange="this.form.submit()">
            <option value="desc" <%= sort === 'desc' ? 'selected' : '' %>>Newest to Oldest</option>
            <option value="asc" <%= sort === 'asc' ? 'selected' : '' %>>Oldest to Newest</option>
          </select>
        </form>
      </div>
    </div>

    <% let years = {}; %>
    <% posts.forEach(post => { %>
      <% const year = new Date(post.createdAt).getFullYear(); %>
      <% if (!years[year]) years[year] = []; %>
      <% years[year].push(post); %>
    <% }); %>

    <div id="noPostsMessage" style="display: none; text-align: center; padding: 20px; font-size: 18px; color: #555;">
      No posts found matching "<span id="searchTerm"></span>"
    </div>

    <% Object.keys(years).sort((a, b) => { %>
      <% return sort === 'asc' ? a - b : b - a; %>
    <% }).forEach(year => { %>
      <div class="year-section" data-year="<%= year %>">
        <button class="collapsible"><%= year %> <span class="arrow">▼</span></button>
        <div class="content" style="display: none;">
          <% years[year].forEach(post => { %>
            <div class="post-card" data-title="<%= post.title.toLowerCase() %>" data-author="<%= post.author.toLowerCase() %>">
              <img src="<%= post.imageUrl %>" alt="<%= post.title %>" class="post-img">
              <h3><%= post.title %></h3>
              <div class="post-card-content">
                <p><%= post.content %></p>
                <p><strong>Author:</strong> <%= post.author %></p>
                <p class="date-posted">Posted on: <%= new Date(post.createdAt).toLocaleDateString() %></p>
              </div>
              <div class="post-actions">
                <a href="/edit-post/<%= post._id %>" class="edit-btn">Edit</a>
                <form action="/delete-post/<%= post._id %>" method="POST">
                  <button type="submit" class="delete-btn">Delete</button>
                </form>
              </div>
            </div>
          <% }) %>
        </div>
      </div>
    <% }) %>

  </main>

  <% if (!locals.dashboard) { %>
  <footer>
    <div class="footer-content">
      <div class="footer-left">
        <p>Powered by Erovoutika</p>
      </div>

      <footer class="fixed-footer">
        <div class="footer-content">
          <div class="footer-left">
            <p>Powered by Erovoutika</p>
          </div>

          <div class="footer-right">
            <p>Unit 703, PARC HOUSE II, Epifanio de los Santos Ave, Makati, 1212 Metro Manila</p>
            <p><strong>Contact us via:</strong> 0974 423 1557 || erovoutika@gmail.com</p>
            <div class="social-icons">
              <a href="https://www.facebook.com/erovoutika" target="_blank" class="social-icon">f</a>
              <a href="https://www.erovoutika.ph" target="_blank" class="social-icon">↗</a>
              <a href="https://www.linkedin.com/company/erovoutika/" target="_blank" class="social-icon">in</a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  </footer>
  
  <a href="#" class="back-to-top" id="backToTop">↑</a>
  <% } %>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Handle collapsible sections
    const collapsibles = document.querySelectorAll('.collapsible');
    
    // Check authentication state on page load and especially when returning via back button
    function verifySession() {
      // Add a random parameter to avoid caching
      fetch('/api/check-session?t=' + new Date().getTime(), { 
        credentials: 'same-origin',
        headers: { 'Cache-Control': 'no-cache' }
      })
      .then(response => response.json())
      .then(data => {
        if (!data.authenticated) {
          // Session is invalid, redirect to login
          console.log('Session invalid, redirecting to login');
          localStorage.removeItem('isLoggedIn');
          window.location.href = '/login?expired=true&redirect=' + encodeURIComponent(window.location.pathname);
        }
      })
      .catch(error => {
        console.error('Session check error:', error);
      });
    }
    
    // Verify session on page load
    verifySession();
    
    // Also verify when page is shown (e.g., when returning via back button)
    window.addEventListener('pageshow', function(event) {
      // If page is loaded from cache (back/forward navigation)
      if (event.persisted || (window.performance && window.performance.navigation.type === 2)) {
        verifySession();
      }
    });
    
    collapsibles.forEach(function(button) {
      button.addEventListener('click', function() {
        this.classList.toggle('active');
        
        // Toggle the display of the next element (the content)
        const content = this.nextElementSibling;
        if (content.style.display === 'block') {
          content.style.display = 'none';
        } else {
          content.style.display = 'block';
        }
      });
      
      // Auto-expand the first section
      if (button === collapsibles[0]) {
        button.classList.add('active');
        const content = button.nextElementSibling;
        content.style.display = 'block';
      }
    });

    // Dynamic search functionality
    const searchInput = document.getElementById('searchInput');
    const noPostsMessage = document.getElementById('noPostsMessage');
    const searchTerm = document.getElementById('searchTerm');
    const yearSections = document.querySelectorAll('.year-section');
    const postCards = document.querySelectorAll('.post-card');
    
    searchInput.addEventListener('input', function() {
      const query = this.value.trim().toLowerCase();
      let totalMatchingPosts = 0;
      searchTerm.textContent = query;
      
      // Reset display of all sections
      yearSections.forEach(section => {
        section.style.display = 'block';
        let yearMatchCount = 0;
        
        // Get all post cards within this year section
        const yearPosts = section.querySelectorAll('.post-card');
        
        yearPosts.forEach(post => {
          const title = post.getAttribute('data-title');
          const author = post.getAttribute('data-author');
          const content = post.querySelector('.post-card-content p').textContent.toLowerCase();
          
          if (query === '' || 
              title.includes(query) || 
              author.includes(query) || 
              content.includes(query)) {
            post.style.display = 'block';
            yearMatchCount++;
            totalMatchingPosts++;
          } else {
            post.style.display = 'none';
          }
        });
        
        // Hide year section if no posts match
        if (yearMatchCount === 0) {
          section.style.display = 'none';
        } else {
          // Make sure content is visible if there are matches
          const content = section.querySelector('.content');
          const button = section.querySelector('.collapsible');
          content.style.display = 'block';
          button.classList.add('active');
        }
      });
      
      // Show "no posts" message if no matches
      if (totalMatchingPosts === 0 && query !== '') {
        noPostsMessage.style.display = 'block';
      } else {
        noPostsMessage.style.display = 'none';
      }
    });
  });
</script>
</body>

</html>
