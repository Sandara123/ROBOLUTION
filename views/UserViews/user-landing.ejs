<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="shortcut icon" href="/images/ROBOLUTION_ICON.ico" type="image/x-icon">
  <meta name="description" content="Erovoutika is a leading provider of innovative robotics and automation solutions for businesses worldwide. Our expert team of engineers and designers create ...">
  <title>Robolution Blog</title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/responsive.css">
  <script src="/js/script.js" defer></script>
  <script src="/js/mobile.js" defer></script>
  <!-- Add Font Awesome for icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <style>
    /* Background color change */
    body, main {
      background-color: #ffffff;
      background-image: none;
    }
    
    /* Post grid styling */
    .posts-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 40px;
      padding: 30px 20px;
      max-width: 1440px;
      margin: 0 auto;
    }
    
    /* Initial button visibility */
    .login-button, .signup-button {
      display: inline-block;
    }
    
    .logout-button {
      display: none;
    }
    
    /* Sign-up button styles */
    .signup-button {
      background-color: #4CAF50;
      color: white;
      border: none;
    }
    
    .signup-button:hover {
      background-color: #45a049;
    }
    
    /* Logout button styles */
    .logout-button {
      background-color: #f44336;
      color: white;
      border: none;
    }
    
    .logout-button:hover {
      background-color: #d32f2f;
    }
    
    /* Updated card styling */
    .post-card {
      position: relative;
      height: 380px;
      background: transparent;
      padding: 0;
      border-radius: 8px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
      overflow: hidden;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      display: block;
      width: 100%;
    }
    
    .post-card:hover {
      transform: translateY(-8px);
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }
    
    /* Image styling */
    .post-img {
      width: 100%;
      height: 100%;
      object-fit: cover; /* Changed from 'fit' to 'cover' */
      border-radius: 0;
      margin: 0;
      transition: filter 0.3s ease;
    }
    
    /* Hover effect */
    .post-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.7);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      opacity: 0;
      transition: opacity 0.3s ease;
      padding: 20px;
      box-sizing: border-box;
      color: white !important;
      text-align: center;
    }
    
    .post-card:hover .post-img {
      filter: blur(3px) brightness(0.7);
    }
    
    .post-card:hover .post-overlay {
      opacity: 1;
    }
    
    .post-title {
      font-size: 1.5rem;
      font-weight: bold;
      margin-bottom: 10px;
      color: white !important;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8), 0 0 10px rgba(0, 0, 0, 0.5);
    }
    
    .post-date {
      font-size: 0.9rem;
      color: white !important;
      text-shadow: 0 1px 3px rgba(0, 0, 0, 0.8);
    }
    
    /* Year section styling */
    .year-section {
      margin-bottom: 40px;
    }
    
    .collapsible {
      background-color: #00008b;
      padding: 15px 20px;
      border-radius: 6px;
      margin-bottom: 20px;
      font-size: 1.5rem;
      position: relative;
      cursor: pointer;
      transition: all 0.3s ease;
      color: white;
      display: flex;
      align-items: center;
      justify-content: space-between;
      box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
      border: none;
      width: 100%;
      text-align: left;
    }
    
    .collapsible:hover {
      background-color: #146cb1;
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
    }
    
    .collapsible:active {
      transform: translateY(1px);
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    
    .collapsible::after {
      content: "â–¼";
      color: white;
      font-size: 14px;
      margin-left: 10px;
      transition: transform 0.3s ease;
    }
    
    .collapsible.active::after {
      transform: rotate(180deg);
    }
    
    .collapsible:focus {
      outline: none;
      box-shadow: 0 0 0 3px rgba(10, 61, 98, 0.3), 0 3px 10px rgba(0, 0, 0, 0.1);
    }
    
    /* Header styling */
    .posts-header h2, .trending-header h2 {
      color: #00008b;
      text-shadow: none;
    }
    
    .sort-form label {
      color: #00008b;
      text-shadow: none;
    }
    
    /* Dropdown styles */
    .dropdown {
      position: relative;
      display: inline-block;
    }
    
    .dropdown-btn {
      cursor: pointer;
    }
    
    .dropdown-content {
      display: none;
      position: absolute;
      background-color: #f9f9f9;
      min-width: 220px;
      box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
      z-index: 1;
      border-radius: 4px;
      padding: 8px 0;
    }
    
    .dropdown-content a {
      color: black;
      padding: 12px 16px;
      text-decoration: none;
      display: block;
      text-align: left;
      transition: background-color 0.2s ease;
    }
    
    .dropdown-content a:hover {
      background-color: #f1f1f1;
    }
    
    .dropdown:hover .dropdown-content {
      display: block;
    }
    
    .dropdown-empty {
      padding: 12px 16px;
      color: #666;
      font-style: italic;
      text-align: center;
    }

    /* Trending Posts Section Styles */
    .trending-section {
      margin-bottom: 40px;
      padding: 0 20px; /* Add padding to match .posts-grid */
      max-width: 1440px; /* Match .posts-grid */
      margin-left: auto; /* Center the section */
      margin-right: auto; /* Center the section */
    }
    .trending-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 20px;
    }
    .trending-posts-scroller {
      position: relative;
      overflow: hidden; /* Hide scrollbar, navigation handled by buttons */
    }
    .trending-posts-grid {
      display: flex; /* Use flex for horizontal scrolling */
      gap: 40px;
      padding-bottom: 20px; /* For shadow visibility */
      overflow-x: auto; /* Fallback if JS fails, but ideally hidden */
      scroll-behavior: smooth;
      /* Hide scrollbar for a cleaner look - handled by JS navigation */
      -ms-overflow-style: none;  /* IE and Edge */
      scrollbar-width: none;  /* Firefox */
    }
    .trending-posts-grid::-webkit-scrollbar {
        display: none; /* Chrome, Safari, Opera */
    }
    .trending-posts-grid .post-card {
      flex: 0 0 calc(33.333% - 27px); /* Approx 1/3 width, adjust gap (40px * 2/3) */
      max-width: calc(33.333% - 27px);
      /* Ensure post-card styling is consistent */
    }
    .scroll-arrow {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      background-color: rgba(0, 0, 0, 0.5);
      color: white;
      border: none;
      padding: 10px;
      font-size: 1.5rem;
      cursor: pointer;
      z-index: 10;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: background-color 0.3s ease;
    }
    .scroll-arrow:hover {
      background-color: rgba(0, 0, 0, 0.8);
    }
    .scroll-arrow.left {
      left: -5px; /* Adjust for better visibility */
    }
    .scroll-arrow.right {
      right: -5px; /* Adjust for better visibility */
    }
    .scroll-arrow:disabled {
        background-color: rgba(0, 0, 0, 0.2);
        cursor: not-allowed;
    }
    
    /* Responsive grid adjustments */
    @media (max-width: 1400px) {
      .posts-grid {
        grid-template-columns: repeat(2, 1fr);
        max-width: 1100px;
      }
      .trending-posts-grid .post-card {
        flex-basis: calc(50% - 20px); /* Adjust for 2 items */
        max-width: calc(50% - 20px);
      }
      .post-card {
        height: 360px;
      }
    }
    
    @media (max-width: 900px) {
      .posts-grid {
        grid-template-columns: 1fr;
        max-width: 600px;
        gap: 35px;
      }
      .trending-posts-grid .post-card {
        flex-basis: calc(100% - 0px); /* Full width for single item scrolling */
        max-width: calc(100% - 0px);
      }
      .post-card {
        height: 400px;
      }
      .scroll-arrow {
        padding: 8px;
        font-size: 1.2rem;
        width: 35px;
        height: 35px;
      }
    }
    
    @media (max-width: 640px) {
      .post-card {
        height: 320px;
      }
      .trending-posts-grid .post-card {
        /* Already full width from 900px breakpoint */
      }
    }
    
    /* Mobile specific styles */
    @media (max-width: 768px) {
      .header-content {
        flex-direction: column;
        padding: 10px 5px;
      }
      
      .logo {
        max-width: 150px;
        margin-bottom: 10px;
      }
      
      .header-nav {
        flex-wrap: wrap;
        justify-content: center;
        gap: 5px;
      }
      
      .nav-button {
        padding: 6px 10px;
        font-size: 0.9rem;
        margin: 2px;
      }
      
      /* This is a custom override just for this page */
      .video-section {
        height: auto;
        margin-top: 60px;
      }
      
      .NandU-banner {
        max-width: 90%;
      }
      
      .posts-header, .trending-header {
        flex-direction: column;
        align-items: flex-start;
        padding: 10px 15px;
      }
      
      .posts-header h2, .trending-header h2 {
        margin-bottom: 15px;
        font-size: 1.5rem;
      }
      
      .sort-form {
        width: 100%;
        margin-bottom: 10px;
      }
      
      .sort-form label {
        display: block;
        margin-bottom: 5px;
      }
      
      .sort-form select {
        width: 100%;
        padding: 8px;
      }
      
      .year-section, .trending-section {
        margin-bottom: 25px;
        padding: 0 15px; /* Consistent padding */
      }
      
      .collapsible {
        padding: 12px 15px;
        font-size: 1.3rem;
      }
      
      .footer-content {
        flex-direction: column;
        padding: 15px 10px;
        text-align: center;
      }
      
      .footer-left, .footer-right {
        width: 100%;
        text-align: center;
      }
      
      .footer-right {
        margin-top: 15px;
      }
      
      .footer-right p {
        font-size: 0.9rem;
        margin: 5px 0;
      }
      
      .social-icons {
        justify-content: center;
        margin-top: 10px;
      }
    }
    
    @media (max-width: 480px) {
      .post-title {
        font-size: 1.3rem;
      }
      
      .nav-button {
        padding: 5px 8px;
        font-size: 0.8rem;
      }
      
      .collapsible {
        font-size: 1.1rem;
        padding: 10px 12px;
      }
      
      .posts-header h2, .trending-header h2 {
        font-size: 1.3rem;
      }
      
      .video-section {
        height: auto;
        margin-top: 55px;
      }
    }
  </style>
  
</head>

<body>
<div class="content-wrapper">

  <header>
    <div class="header-content">
      <img src="/images/LOGO.webp" alt="Robolution Logo" class="logo">
      <!-- Mobile menu toggle will be added by JavaScript on small screens -->
      <nav class="header-nav">
        <a href="/user-landing" class="nav-button">News</a>
        <a href="/user-categories" class="nav-button">Categories</a>
        <div class="dropdown">
          <button class="nav-button dropdown-btn">Regional</button>
          <div class="dropdown-content">
            <a href="/regional?region=All">All Regions</a>
            <% 
            // Get unique regions with posts
            let regions = [];
            posts.forEach(post => {
              if (post.region && post.region !== 'All' && !regions.includes(post.region)) {
                regions.push(post.region);
              }
            });
            
            // Sort regions alphabetically
            regions.sort();
            
            if(regions.length > 0) { 
              // Display regions with posts
              regions.forEach(region => { %>
                <a href="/regional?region=<%= region %>"><%= region %></a>
              <% });
            } else { %>
              <div class="dropdown-empty">No regional posts available</div>
            <% } %>
          </div>
        </div>
        <a href="/registration" class="nav-button registration-button">Registration</a>
        <a href="/login" class="nav-button login-button">Login</a>
        <a href="/signup" class="nav-button signup-button">Sign Up</a>
        <a href="/logout" class="nav-button logout-button">Logout</a>
        <a href="/profile" class="nav-button profile-button" style="display: none;">
          <i class="fas fa-user-circle"></i> Profile
        </a>
      </nav>
    </div>
  </header>

  <div class="video-section">
    <video src="/images/Robolution2025.mp4" loop muted autoplay playsinline></video>
  </div>

  <main>

    <div class="NandU">
      <img src="/images/News and Updates.png" alt="News and Updates" class="NandU-banner">
    </div>

    <!-- Trending Posts Section -->
    <% if (locals.trendingPosts && trendingPosts.length > 0) { %>
      <div class="trending-section">
        <div class="trending-header">
          <h2>Trending Posts</h2>
        </div>
        <div class="trending-posts-scroller">
          <button class="scroll-arrow left" id="scrollLeftBtn" aria-label="Scroll Left"><i class="fas fa-chevron-left"></i></button>
          <div class="trending-posts-grid" id="trendingGrid">
            <% trendingPosts.forEach(post => { %>
              <a href="/post/<%= post._id %>" class="post-card">
                <img src="<%= post.imageUrl || '/images/default-post.jpg' %>" alt="<%= post.title %>" class="post-img">
                <div class="post-overlay">
                  <h3 class="post-title" style="color: #ffffff !important;"><%= post.title %></h3>
                  <p class="post-date" style="color: #ffffff !important;"><%= new Date(post.createdAt).toLocaleDateString() %></p>
                </div>
              </a>
            <% }) %>
          </div>
          <button class="scroll-arrow right" id="scrollRightBtn" aria-label="Scroll Right"><i class="fas fa-chevron-right"></i></button>
        </div>
      </div>
    <% } %>
    <!-- End Trending Posts Section -->

    <div class="posts-header">
      <h2>Posts by Year</h2>
      <form method="GET" action="/user-landing" class="sort-form">
        <label for="sort">Sort by:</label>
        <select name="sort" id="sort" onchange="this.form.submit()">
          <option value="desc" <%= locals.sort === 'desc' ? 'selected' : '' %>>Newest to Oldest</option>
          <option value="asc" <%= locals.sort === 'asc' ? 'selected' : '' %>>Oldest to Newest</option>
        </select>
      </form>
    </div>

    <% let years = {}; %>
    <% posts.forEach(post => { %>
      <% const year = new Date(post.createdAt).getFullYear(); %>
      <% if (!years[year]) years[year] = []; %>
      <% years[year].push(post); %>
    <% }); %>

    <% Object.keys(years).sort((a, b) => { %>
      <% return sort === 'asc' ? a - b : b - a; %>
    <% }).forEach(year => { %>
      <div class="year-section">
        <button class="collapsible"><%= year %></button> <!-- Removed arrow span, handled by ::after -->
        <div class="posts-grid" style="display: none;">
          <% years[year].forEach(post => { %>
            <a href="/post/<%= post._id %>" class="post-card">
              <img src="<%= post.imageUrl || '/images/default-post.jpg' %>" alt="<%= post.title %>" class="post-img">
              <div class="post-overlay">
                <h3 class="post-title" style="color: #ffffff !important;"><%= post.title %></h3>
                <p class="post-date" style="color: #ffffff !important;"><%= new Date(post.createdAt).toLocaleDateString() %></p>
              </div>
            </a>
          <% }) %>
        </div>
      </div>
    <% }) %>

  </main>

  <footer>
    <div class="footer-content">
      <div class="footer-left">
        <p>Powered by Erovoutika</p>
      </div>

      <footer class="fixed-footer">
        <div class="footer-content">
          <div class="footer-left">
            <p>Powered by Erovoutika</p>
          </div>

          <div class="footer-right">
            <p>Unit 703, PARC HOUSE II, Epifanio de los Santos Ave, Makati, 1212 Metro Manila</p>
            <p><strong>Contact us via:</strong> 0974 423 1557 || erovoutika@gmail.com</p>
            <div class="social-icons">
              <a href="https://www.facebook.com/erovoutika" target="_blank" class="social-icon">f</a>
              <a href="https://www.erovoutika.ph" target="_blank" class="social-icon">â†—</a>
              <a href="https://www.linkedin.com/company/erovoutika/" target="_blank" class="social-icon">in</a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  </footer>
</div>

<a href="#" class="back-to-top" id="backToTop">â†‘</a>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Handle collapsible sections
    const collapsibles = document.querySelectorAll('.collapsible');
    
    collapsibles.forEach(function(button) {
      button.addEventListener('click', function() {
        this.classList.toggle('active');
        
        // Toggle the display of the next element (the content)
        const content = this.nextElementSibling;
        if (content.style.display === 'grid' || content.style.display === 'block') {
          content.style.display = 'none';
        } else {
          content.style.display = 'grid';
        }
      });
      
      // Auto-expand the first year section by default if it exists
      if (collapsibles.length > 0 && button === collapsibles[0]) {
        button.classList.add('active');
        const content = button.nextElementSibling;
        if (content) content.style.display = 'grid';
      }
    });
    
    // Handle back-to-top button
    const backToTopButton = document.getElementById('backToTop');
    
    if (backToTopButton) {
      window.addEventListener('scroll', function() {
        if (window.pageYOffset > 300) {
          backToTopButton.classList.add('show');
        } else {
          backToTopButton.classList.remove('show');
        }
      });
      
      backToTopButton.addEventListener('click', function(e) {
        e.preventDefault();
        window.scrollTo({ top: 0, behavior: 'smooth' });
      });
    }
    
    // Check if user is logged in using a cookie check
    function checkLoginStatus() {
      const isLoggedInStorage = localStorage.getItem('isLoggedIn') === 'true';
      const isLoggedInCookie = document.cookie.split(';')
        .some(item => item.trim().startsWith('robolution_session='));
      const isLoggedIn = isLoggedInStorage || isLoggedInCookie;
      
      const loginButton = document.querySelector('.login-button');
      const signupButton = document.querySelector('.signup-button');
      const logoutButton = document.querySelector('.logout-button');
      const profileButton = document.querySelector('.profile-button');
      
      if (isLoggedIn) {
        if (loginButton) loginButton.style.display = 'none';
        if (signupButton) signupButton.style.display = 'none';
        if (logoutButton) logoutButton.style.display = 'inline-block';
        if (profileButton) profileButton.style.display = 'inline-block';
      } else {
        if (loginButton) loginButton.style.display = 'inline-block';
        if (signupButton) signupButton.style.display = 'inline-block';
        if (logoutButton) logoutButton.style.display = 'none';
        if (profileButton) profileButton.style.display = 'none';
      }
    }
    
    window.checkServerSession = function(event) {
      event.preventDefault();
      fetch('/api/check-session')
        .then(response => response.json())
        .then(data => {
          if (data.authenticated) {
            window.location.href = '/profile';
          } else {
            localStorage.removeItem('isLoggedIn');
            window.location.href = '/login?redirect=/profile';
          }
        })
        .catch(error => {
          console.error('Error checking session:', error);
          localStorage.removeItem('isLoggedIn');
          window.location.href = '/login';
        });
    };
    
    checkLoginStatus();
    
    const profileButton = document.querySelector('.profile-button');
    if (profileButton) {
      profileButton.addEventListener('click', function(event) {
        event.preventDefault();
        checkServerSession(event); // Use the global function
      });
    }

    // Trending Posts Scroller Functionality
    const trendingGrid = document.getElementById('trendingGrid');
    const scrollLeftBtn = document.getElementById('scrollLeftBtn');
    const scrollRightBtn = document.getElementById('scrollRightBtn');

    if (trendingGrid && scrollLeftBtn && scrollRightBtn) {
      const scrollAmount = () => {
        // Calculate scroll amount based on the width of one card + gap
        const firstCard = trendingGrid.querySelector('.post-card');
        if (firstCard) {
          const cardStyle = window.getComputedStyle(firstCard);
          const cardWidth = firstCard.offsetWidth;
          const cardMarginRight = parseFloat(cardStyle.marginRight) || 0; // Assuming gap is implemented as margin
          const gap = 40; // from CSS .trending-posts-grid { gap: 40px; }
          return cardWidth + gap; 
        }
        return 300; // Default scroll amount
      };

      const updateArrowVisibility = () => {
        scrollLeftBtn.disabled = trendingGrid.scrollLeft <= 0;
        scrollRightBtn.disabled = trendingGrid.scrollLeft + trendingGrid.clientWidth >= trendingGrid.scrollWidth - 5; // -5 for buffer
      };

      scrollLeftBtn.addEventListener('click', () => {
        trendingGrid.scrollBy({ left: -scrollAmount(), behavior: 'smooth' });
      });

      scrollRightBtn.addEventListener('click', () => {
        trendingGrid.scrollBy({ left: scrollAmount(), behavior: 'smooth' });
      });

      // Update arrow visibility on scroll and initial load
      trendingGrid.addEventListener('scroll', updateArrowVisibility);
      updateArrowVisibility(); // Initial check
       // Also update on resize as clientWidth/scrollWidth might change
      window.addEventListener('resize', updateArrowVisibility);
    }

  });
</script>
</body>

</html>
